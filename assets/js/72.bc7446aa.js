(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{254:function(t,e,s){"use strict";s.r(e);var a=s(3),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"regexp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),s("p",[t._v("RegExp 对象用于表达字符串的匹配模式。")]),t._v(" "),s("h2",{attrs:{id:"字面量和构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量和构造函数"}},[t._v("#")]),t._v(" 字面量和构造函数")]),t._v(" "),s("p",[t._v("以下三种方式可以创建同样的正则表达式")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab+c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab+c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab+c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"静态属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态属性"}},[t._v("#")]),t._v(" 静态属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("RegExp.lastIndex")]),t._v("：该索引表示从哪里开始下一个匹配")])]),t._v(" "),s("h2",{attrs:{id:"实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("flags")]),t._v("：返回正则表达式的修饰符字符串")]),t._v(" "),s("li",[s("code",[t._v("dotAll")]),t._v("：是否设置 s 修饰符")]),t._v(" "),s("li",[s("code",[t._v("global")]),t._v("：是否设置 g 修饰符")]),t._v(" "),s("li",[s("code",[t._v("ignoreCase")]),t._v("：是否设置 i 修饰符")]),t._v(" "),s("li",[s("code",[t._v("multiline")]),t._v("：是否设置 m 修饰符")]),t._v(" "),s("li",[s("code",[t._v("sticky")]),t._v("：是否设置 y 粘连修饰符")]),t._v(" "),s("li",[s("code",[t._v("unicode")]),t._v("：是否设置 u 修饰符")]),t._v(" "),s("li",[s("code",[t._v("source")]),t._v("：正则表达式的文本")])]),t._v(" "),s("h2",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("exec()")]),t._v("：执行正则表达式匹配")]),t._v(" "),s("li",[s("code",[t._v("test()")]),t._v("：测试字符串是否匹配正则表达式")]),t._v(" "),s("li",[s("code",[t._v("[Symbol.match]()")]),t._v("：实现"),s("code",[t._v("String.prototype.match()")])]),t._v(" "),s("li",[s("code",[t._v("[Symbol.matchAll]()")]),t._v("：实现"),s("code",[t._v("String.prototype.matchAll()")])]),t._v(" "),s("li",[s("code",[t._v("[Symbol.search]()")]),t._v("：实现"),s("code",[t._v("String.prototype.search()")])]),t._v(" "),s("li",[s("code",[t._v("[Symbol.replace]()")]),t._v("：实现"),s("code",[t._v("String.prototype.replace()")])]),t._v(" "),s("li",[s("code",[t._v("[Symbol.split]()")]),t._v("：实现"),s("code",[t._v("String.prototype.split()")])]),t._v(" "),s("li",[s("code",[t._v("toString()")]),t._v("：重写"),s("code",[t._v("Object.prototype.toString()")]),t._v("方法")])])])}),[],!1,null,null,null);e.default=r.exports}}]);