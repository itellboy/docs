(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{227:function(a,e,t){"use strict";t.r(e);var s=t(3),v=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[a._v("#")]),a._v(" Array")]),a._v(" "),t("p",[a._v("Array 用来表示和操作 JavaScript 里面的数组。")]),a._v(" "),t("h2",{attrs:{id:"构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),t("p",[a._v("直接调用"),t("code",[a._v("Array()")]),a._v("和调用"),t("code",[a._v("new Array()")]),a._v("构造数组，效果是等同的。")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),t("p",[a._v("建议直接使用字面量"),t("code",[a._v("var arr = []")]),a._v("的形式创建数组，因为通过构造函数创建数组，会因构造函数的参数类型不同而产生不同的结果。")])]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// [empty, empty]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// RangeError: Invalid array length")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// [1, 2]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[a._v("#")]),a._v(" 静态方法")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Array.from()")]),a._v("：从类数组对象或者可迭代对象中创建一个新的数组实例")]),a._v(" "),t("li",[t("code",[a._v("Array.isArray()")]),a._v("：判断一个对象是否为数组")]),a._v(" "),t("li",[t("code",[a._v("Array.of(...args)")]),a._v("：创建一个由参数组成的数组")])]),a._v(" "),t("h2",{attrs:{id:"实例属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[a._v("#")]),a._v(" 实例属性")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("length")]),a._v("：数组长度")])]),a._v(" "),t("h2",{attrs:{id:"实例方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[a._v("#")]),a._v(" 实例方法")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("concat()")]),a._v("：合并数组，不会改变原数组")]),a._v(" "),t("li",[t("code",[a._v("copyWithin(index[, start[, end]])")]),a._v("：将数组一部分元素覆盖另一部分元素，改变原数组")]),a._v(" "),t("li",[t("code",[a._v("entries()")]),a._v("：返回数组的迭代器对象")]),a._v(" "),t("li",[t("code",[a._v("every(callback)")]),a._v("：数组成员是否都满足条件")]),a._v(" "),t("li",[t("code",[a._v("fill(ele)")]),a._v("：填充数组，改变原数组")]),a._v(" "),t("li",[t("code",[a._v("filter(callback)")]),a._v("：过滤不满足条件的成员，不改变原数组")]),a._v(" "),t("li",[t("code",[a._v("find(callback)")]),a._v("：返回满足条件的成员，没有则返回"),t("code",[a._v("undefined")])]),a._v(" "),t("li",[t("code",[a._v("findIndex(callback)")]),a._v("：返回满足条件成员的下标，没有返回"),t("code",[a._v("-1")])]),a._v(" "),t("li",[t("code",[a._v("forEach(callback)")]),a._v("：遍历数组")]),a._v(" "),t("li",[t("code",[a._v("indexOf(ele)")]),a._v("：从左向右搜索符合与参数相等成员，返回被找到成员的下标，没有返回"),t("code",[a._v("-1")])]),a._v(" "),t("li",[t("code",[a._v("join(sep)")]),a._v("：成员用 sep 连接，返回连接后的字符串")]),a._v(" "),t("li",[t("code",[a._v("keys()")]),a._v("：返回由下标组成的迭代器对象")]),a._v(" "),t("li",[t("code",[a._v("lastIndexOf()")]),a._v("：从右向左搜索符合与参数相等成员，返回被找到成员的下标，没有返回"),t("code",[a._v("-1")])]),a._v(" "),t("li",[t("code",[a._v("map(callback)")]),a._v("：遍历数组，返回由 callback 结果组成的数组")]),a._v(" "),t("li",[t("code",[a._v("pop()")]),a._v("：弹出数组尾部成员，改变原数组，返回被弹出元素")]),a._v(" "),t("li",[t("code",[a._v("push(ele)")]),a._v("：向数组尾部插入成员，改变原数组，返回数组长度")]),a._v(" "),t("li",[t("code",[a._v("reduce(callback)")]),a._v("：从左至右执行回调函数，并把回调函数结果传递给下一个回调函数，返回最后一个回调函数返回的结果")]),a._v(" "),t("li",[t("code",[a._v("reduceRight(callback)")]),a._v("：从右至左执行回调函数，并把回调函数结果传递给下一个回调函数，返回最后一个回调函数返回的结果")]),a._v(" "),t("li",[t("code",[a._v("shift(callback)")]),a._v("：删除数组头部成员，改变原数组，返回被删除元素")]),a._v(" "),t("li",[t("code",[a._v("slice()")]),a._v("：返回一个子数组")]),a._v(" "),t("li",[t("code",[a._v("some(callback)")]),a._v("：如果数组中至少有一个元素满足测试函数，则返回"),t("code",[a._v("true")]),a._v("，否则返回"),t("code",[a._v("false")])]),a._v(" "),t("li",[t("code",[a._v("sort(callback)")]),a._v("：数组排序，改变原数组")]),a._v(" "),t("li",[t("code",[a._v("splice(index, length, ele)")]),a._v("：删除指定下标开始 length 个成员，并插入 ele，返回被删除的成员组成的数组，改变原数组")]),a._v(" "),t("li",[t("code",[a._v("toLocalString()")]),a._v("：重写"),t("code",[a._v("Object.toLocalString()")])]),a._v(" "),t("li",[t("code",[a._v("unshift(ele)")]),a._v("：在数组头部插入成员，改变原数组，返回数组的长度")]),a._v(" "),t("li",[t("code",[a._v("values()")]),a._v("：返回由数组成员组成的迭代器对象")])])])}),[],!1,null,null,null);e.default=v.exports}}]);