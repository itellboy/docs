(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{194:function(e,s,t){"use strict";t.r(s);var a=t(3),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[e._v("#")]),e._v(" Promise")]),e._v(" "),t("p",[e._v("Promise 用于表示一个异步操作的过程和结果。")]),e._v(" "),t("h2",{attrs:{id:"构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[e._v("#")]),e._v(" 构造函数")]),e._v(" "),t("p",[e._v("创建一个 Promise")]),e._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[e._v("#")]),e._v(" 静态方法")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Promise.all(iterable)")]),e._v("：iterable 为一个可迭代对象，返回一个 Promise。")])]),e._v(" "),t("p",[e._v("当 iterable 中所有的状态都是 resolved 或者有一个状态为 rejected，"),t("code",[e._v("Promise.all()")]),e._v("的状态才会变更。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Promise.race(iterable)")])])]),e._v(" "),t("p",[e._v("当 iterable 中又一个状态变更时，"),t("code",[e._v("Promise.race()")]),e._v("状态会随之变更。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Promise.reject(reason)")]),e._v("：返回一个 rejected 状态的 Promise")]),e._v(" "),t("li",[t("code",[e._v("Promise.resolve(value)")]),e._v("：返回一个 resolve 状态的 Promise")])])])}),[],!1,null,null,null);s.default=r.exports}}]);