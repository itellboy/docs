(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{271:function(t,r,s){"use strict";s.r(r);var o=s(3),e=Object(o.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"表达式和操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式和操作符"}},[t._v("#")]),t._v(" 表达式和操作符")]),t._v(" "),s("h2",{attrs:{id:"_1-基础表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础表达式"}},[t._v("#")]),t._v(" 1. 基础表达式")]),t._v(" "),s("p",[t._v("下面的表达式是 JavaScript 语言里面最基础的关键字和一般表达式")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/this/"}},[t._v("this")]),t._v("：是指向当前执行环境上下文的关键字")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/function/"}},[t._v("function")]),t._v("：声明一个方法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/function*/"}},[t._v("function*")]),t._v("：声明一个 generator 方法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/class/"}},[t._v("class")]),t._v("：声明一个 class")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/yield/"}},[t._v("yield")]),t._v("：暂停或者恢复一个 generator 方法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/yield*/"}},[t._v("yield*")]),t._v("：委派给另外一个generator函数或可迭代的对象")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/async-function/"}},[t._v("async function")]),t._v("：定义一个异步函数表达式")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/await/"}},[t._v("await")]),t._v("：暂停或恢复执行异步函数，等待一个 Promise 的 resolution 或者是 rejection")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/array-init/"}},[t._v("[]")]),t._v("：数组初始化/字面量语法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/object-init/"}},[t._v("{}")]),t._v("：对象初始化/字面量语法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/grouping/"}},[t._v("()")]),t._v("：分组语法")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/core/regexp/"}},[t._v("/ab+ci/")]),t._v("：正则表达式的字面量语法")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-左边表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-左边表达式"}},[t._v("#")]),t._v(" 2. 左边表达式")]),t._v(" "),s("p",[t._v("左边的值是赋值的目标")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/property-accessors/"}},[t._v("属性访问符")]),t._v("：访问对象的属性和方法，比如"),s("code",[t._v("Object.property")]),t._v("、"),s("code",[t._v("Object['property']")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/new/"}},[t._v("new")]),t._v("：实例化构造函数")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/new-target/"}},[t._v("new.target")]),t._v("：在构造函数里面，"),s("code",[t._v("new.target")]),t._v("指向"),s("code",[t._v("new")]),t._v("调用的构造函数")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/new-target/"}},[t._v("super")]),t._v("："),s("code",[t._v("super")]),t._v("可以调用父构造函数")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/spread-syntax/"}},[t._v("...obj")]),t._v("：可以讲一个可迭代的对象延展成一个一个的成员参数")],1)]),t._v(" "),s("h2",{attrs:{id:"_3-自增-自减"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-自增-自减"}},[t._v("#")]),t._v(" 3. 自增/自减")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("a++")]),t._v("：后置自增运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("a--")]),t._v("：后置自减运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("++a")]),t._v("：前置自增运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("--a")]),t._v("：前置自减运算符")],1)]),t._v(" "),s("h2",{attrs:{id:"_4-一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-一元运算符"}},[t._v("#")]),t._v(" 4. 一元运算符")]),t._v(" "),s("p",[t._v("一元运算符仅仅操作一个对象")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/delete/"}},[t._v("delete")]),t._v("：可以从对象中删除一个属性")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/void/"}},[t._v("void")]),t._v("：表示表达式放弃返回值")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/typeof/"}},[t._v("typeof")]),t._v("：返回给定对象的类型")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("+")]),t._v("：一元加法操作符将给定对象转换为 Number 类型")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("-")]),t._v("：一元加法操作符将给定对象转换为 Number 类型，并取反")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v("~")]),t._v("：按位非运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/logical-operators/"}},[t._v("!")]),t._v("：逻辑非运算符")],1)]),t._v(" "),s("h2",{attrs:{id:"_5-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-算术运算符"}},[t._v("#")]),t._v(" 5. 算术运算符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("+")]),t._v("：加法运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("-")]),t._v("：减法运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("*")]),t._v("：乘法运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("/")]),t._v("：除法运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("%")]),t._v("：取模运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/arithmetic-operators/"}},[t._v("**")]),t._v("：指数运算符")],1)]),t._v(" "),s("h2",{attrs:{id:"_6-关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-关系运算符"}},[t._v("#")]),t._v(" 6. 关系运算符")]),t._v(" "),s("p",[t._v("通过一个比较运算符进行比较，根据比较结果返回一个布尔值")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/in/"}},[t._v("in")]),t._v("：判断对象是否拥有给定属性")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/instanceof/"}},[t._v("instanceof")]),t._v("：判断一个对象是否为另一个对象的实例")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v(">")]),t._v("：大于")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v(">=")]),t._v("：大于等于")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("<")]),t._v("：小于")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("<=")]),t._v("：小于等于")],1)]),t._v(" "),s("h2",{attrs:{id:"_7-相等运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-相等运算符"}},[t._v("#")]),t._v(" 7. 相等运算符")]),t._v(" "),s("p",[t._v("返回比较对象是否相等")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("==")]),t._v("：相等")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("!=")]),t._v("：不等")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("===")]),t._v("：全等")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comparison-operators/"}},[t._v("!==")]),t._v("：非全等")],1)]),t._v(" "),s("h2",{attrs:{id:"_8-位移运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-位移运算符"}},[t._v("#")]),t._v(" 8. 位移运算符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v("<<")]),t._v("：左移")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v(">>")]),t._v("：左移")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v(">>>")]),t._v("：无符号右移")],1)]),t._v(" "),s("h2",{attrs:{id:"_9-二进制运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-二进制运算符"}},[t._v("#")]),t._v(" 9. 二进制运算符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v("|")]),t._v("：或")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v("&")]),t._v("：与")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/bitwise-operators/"}},[t._v("^")]),t._v("：异或")],1)]),t._v(" "),s("h2",{attrs:{id:"_10-二元逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-二元逻辑运算符"}},[t._v("#")]),t._v(" 10. 二元逻辑运算符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/logical-operators/"}},[t._v("&&")]),t._v("：逻辑与")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/logical-operators/"}},[t._v("||")]),t._v("：逻辑或")],1)]),t._v(" "),s("h2",{attrs:{id:"_11-三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-三元运算符"}},[t._v("#")]),t._v(" 11. 三元运算符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/conditional-operators/"}},[t._v("condition ? true : false")]),t._v("：三元运算符")],1)]),t._v(" "),s("h2",{attrs:{id:"_12-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-赋值运算符"}},[t._v("#")]),t._v(" 12. 赋值运算符")]),t._v(" "),s("p",[t._v("赋值运算符将运算符右边的值赋值给左边")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("=")]),t._v("：赋值运算符")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("+=")]),t._v("：赋值求和")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("-=")]),t._v("：赋值求差")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("*=")]),t._v("：赋值求积")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("/=")]),t._v("：赋值求商")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("%=")]),t._v("：赋值求余")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("<<=")]),t._v("：赋值左位移")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v(">>=")]),t._v("：赋值右位移")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v(">>>=")]),t._v("：赋值无符号右位移")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("&=")]),t._v("：赋值与")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("|=")]),t._v("：赋值或")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/assignment-operators/"}},[t._v("^=")]),t._v("：赋值异或")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/destructuring-assignment/"}},[t._v("[a, b] = [1, 2]")]),t._v("：解构赋值")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/destructuring-assignment/"}},[t._v("{a, b} = {a: 1, b: 2}")]),t._v("：解构赋值")],1)]),t._v(" "),s("h2",{attrs:{id:"_13-逗号操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-逗号操作符"}},[t._v("#")]),t._v(" 13. 逗号操作符")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/expressions-operators/comma-operator/"}},[t._v(",")]),t._v("：结合多个操作，从左到右进行，返回最后一个操作的值")],1)])])}),[],!1,null,null,null);r.default=e.exports}}]);