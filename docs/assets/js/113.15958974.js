(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{84:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),r("p",[t._v("一般来说，一个函数是一个能够被其他代码调用的“子程序”，一个函数由一些语句组成。一个函数接受值作为参数，同时也能返回值。")]),t._v(" "),r("p",[t._v("在 JavaScript 中，函数是一等公民，它们和对象一样有自己的属性和方法，区别在于函数能被调用。")]),t._v(" "),r("h2",{attrs:{id:"_1-概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),r("p",[t._v("JavaScript 中的每个函数都是一个"),r("code",[t._v("Function")]),t._v("对象。一个函数一定有一个返回值，如果没有指定返回值，它们都会有一个默认的返回值。使用"),r("code",[t._v("new")]),t._v("关键字调用的构造器函数返回指向实例对象的"),r("code",[t._v("this")]),t._v("参数，对于其他的函数，默认返回"),r("code",[t._v("undefined")]),t._v("。")]),t._v(" "),r("p",[t._v("调用函数是，传递给函数参数被称为函数的实参，对应位置的函数参数名叫做函数的形参。如果实参为基本数据类型（字符串，数值，布尔值）的变量，则就算在函数内部改变形参的值，不会影响实参的值。如果实参是一个对象，则形参和实参为同一个对象引用，如果在函数内部改变形参指向对象的属性，则对应实参的属性也会随之改变。")]),t._v(" "),r("p",[t._v("在函数执行环境中，"),r("code",[t._v("this")]),t._v("关键字会指向调用函数对象所处的上下文，不会指向该运行函数")]),t._v(" "),r("h2",{attrs:{id:"_2-内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.内容")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/functions/arrow-functions"}},[t._v("箭头函数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/default-parameters"}},[t._v("默认参数值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/method-definitions"}},[t._v("方法的定义")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/rest-parameters"}},[t._v("Rest 参数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/arguments"}},[t._v("Arguments 对象")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/getter"}},[t._v("getter")])]),t._v(" "),r("li",[r("a",{attrs:{href:"/functions/setter"}},[t._v("setter")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);